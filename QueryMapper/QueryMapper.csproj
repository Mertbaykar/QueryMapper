<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <Title>EFQueryMapper</Title>
    <Authors>MertBaykar</Authors>
    <Company> </Company>
    <Description>EFQueryMapper is a powerful library for seamless type mapping, including support for Entity Framework's IQueryable interface. It allows for efficient mapping between entities and DTOs, streamlining the data transformation process in .NET applications. Mapping profiles are created only once and saved, which makes subsequent mapping operations very fast. If there is no need for any configuration between two types, you don't need to do anything in mapper. Not even a 'CreateMap' required.</Description>
    <PackageProjectUrl>https://github.com/Mertbaykar/QueryMapper</PackageProjectUrl>
    <RepositoryUrl>https://github.com/Mertbaykar/QueryMapper</RepositoryUrl>
    <PackageTags>mapper;querymapper;entityframeworkcore;efcore;querymapping;typemapping;objectmapping</PackageTags>
    <IncludeSymbols>False</IncludeSymbols>
    <PackageId>EFQueryMapper</PackageId>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
    <Version>1.0.3</Version>
    <PackageReleaseNotes>private constructor usage configuration added</PackageReleaseNotes>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\LICENSE.txt">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Include="..\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="8.0.8" />
  </ItemGroup>

</Project>
